// Author: Igor compiler
// Compiler version: igorc 2.1.3
// DO NOT EDIT THIS FILE - it is machine generated

import { Subject } from 'rxjs';
import * as NotificationProtocol from './notification-protocol.data';

export class AbstractNotificationService {
    hello = new Subject<NotificationProtocol.Hello>();
    gameCategoryCreated = new Subject<NotificationProtocol.GameCategoryCreated>();
    gameCategoryUpdated = new Subject<NotificationProtocol.GameCategoryUpdated>();
    gameCategoryDeleted = new Subject<NotificationProtocol.GameCategoryDeleted>();
    gameItemUpdated = new Subject<NotificationProtocol.GameItemUpdated>();

    recv(notification: NotificationProtocol.Notification): void {
        switch (notification.kind) {
            case NotificationProtocol.NotificationKind.Hello:
                this.hello.next(<NotificationProtocol.Hello>notification);
                break;
            case NotificationProtocol.NotificationKind.GameCategoryCreated:
                this.gameCategoryCreated.next(<NotificationProtocol.GameCategoryCreated>notification);
                break;
            case NotificationProtocol.NotificationKind.GameCategoryUpdated:
                this.gameCategoryUpdated.next(<NotificationProtocol.GameCategoryUpdated>notification);
                break;
            case NotificationProtocol.NotificationKind.GameCategoryDeleted:
                this.gameCategoryDeleted.next(<NotificationProtocol.GameCategoryDeleted>notification);
                break;
            case NotificationProtocol.NotificationKind.GameItemUpdated:
                this.gameItemUpdated.next(<NotificationProtocol.GameItemUpdated>notification);
                break;
        }
    }
}
