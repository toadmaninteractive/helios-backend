%% @author Igor compiler
%% @doc Compiler version: igorc 2.1.3
%% DO NOT EDIT THIS FILE - it is machine generated

-module(notification_protocol).

-include_lib("stdlib/include/assert.hrl").
-include("notification_protocol.hrl").

-export([
    notification_kind_to_string/1,
    notification_kind_from_string/1,
    notification_kind_to_json/1,
    notification_kind_from_json/1,
    notification_to_json/1,
    notification_from_json/1,
    hello_to_json/1,
    hello_from_json/1,
    game_category_created_to_json/1,
    game_category_created_from_json/1,
    game_category_updated_to_json/1,
    game_category_updated_from_json/1,
    game_category_deleted_to_json/1,
    game_category_deleted_from_json/1,
    game_item_updated_to_json/1,
    game_item_updated_from_json/1
]).

-export_type([
    notification_kind/0,
    notification/0,
    hello/0,
    game_category_created/0,
    game_category_updated/0,
    game_category_deleted/0,
    game_item_updated/0
]).

-type notification_kind() :: 'hello' | 'game_category_created' | 'game_category_updated' | 'game_category_deleted' | 'game_item_updated'.
-type notification() :: notification_protocol:hello() | notification_protocol:game_category_created() | notification_protocol:game_category_updated() | notification_protocol:game_category_deleted() | notification_protocol:game_item_updated().
-type hello() :: #hello{}.
-type game_category_created() :: #game_category_created{}.
-type game_category_updated() :: #game_category_updated{}.
-type game_category_deleted() :: #game_category_deleted{}.
-type game_item_updated() :: #game_item_updated{}.

-spec notification_kind_to_string(notification_kind()) -> binary().

notification_kind_to_string(hello) -> <<"hello">>;
notification_kind_to_string(game_category_created) -> <<"game_category_created">>;
notification_kind_to_string(game_category_updated) -> <<"game_category_updated">>;
notification_kind_to_string(game_category_deleted) -> <<"game_category_deleted">>;
notification_kind_to_string(game_item_updated) -> <<"game_item_updated">>.

-spec notification_kind_from_string(binary()) -> notification_kind().

notification_kind_from_string(<<"hello">>) -> hello;
notification_kind_from_string(<<"game_category_created">>) -> game_category_created;
notification_kind_from_string(<<"game_category_updated">>) -> game_category_updated;
notification_kind_from_string(<<"game_category_deleted">>) -> game_category_deleted;
notification_kind_from_string(<<"game_item_updated">>) -> game_item_updated.

-spec notification_kind_to_json(notification_kind()) -> igor_json:json_string().

notification_kind_to_json(hello) -> <<"hello">>;
notification_kind_to_json(game_category_created) -> <<"game_category_created">>;
notification_kind_to_json(game_category_updated) -> <<"game_category_updated">>;
notification_kind_to_json(game_category_deleted) -> <<"game_category_deleted">>;
notification_kind_to_json(game_item_updated) -> <<"game_item_updated">>.

-spec notification_kind_from_json(igor_json:json()) -> notification_kind().

notification_kind_from_json(<<"hello">>) -> hello;
notification_kind_from_json(<<"game_category_created">>) -> game_category_created;
notification_kind_from_json(<<"game_category_updated">>) -> game_category_updated;
notification_kind_from_json(<<"game_category_deleted">>) -> game_category_deleted;
notification_kind_from_json(<<"game_item_updated">>) -> game_item_updated.

-spec notification_to_json(notification()) -> igor_json:json_object().

notification_to_json(Record) when is_record(Record, hello) ->
    hello_to_json(Record);
notification_to_json(Record) when is_record(Record, game_category_created) ->
    game_category_created_to_json(Record);
notification_to_json(Record) when is_record(Record, game_category_updated) ->
    game_category_updated_to_json(Record);
notification_to_json(Record) when is_record(Record, game_category_deleted) ->
    game_category_deleted_to_json(Record);
notification_to_json(Record) when is_record(Record, game_item_updated) ->
    game_item_updated_to_json(Record).

-spec notification_from_json(igor_json:json_object()) -> notification().

notification_from_json(Json) ->
    Tag = igor_json:parse(Json, <<"kind">>, {custom, fun notification_protocol:notification_kind_from_json/1}),
    case Tag of
        hello ->
            hello_from_json(Json);
        game_category_created ->
            game_category_created_from_json(Json);
        game_category_updated ->
            game_category_updated_from_json(Json);
        game_category_deleted ->
            game_category_deleted_from_json(Json);
        game_item_updated ->
            game_item_updated_from_json(Json)
    end.

-spec hello_to_json(hello()) -> igor_json:json_object().

hello_to_json(#hello{}) ->
    #{<<"kind">> => igor_json:pack(hello, {custom, fun notification_protocol:notification_kind_to_json/1})}.

-spec hello_from_json(igor_json:json_object()) -> hello().

hello_from_json(_Json) -> #hello{}.

-spec game_category_created_to_json(game_category_created()) -> igor_json:json_object().

game_category_created_to_json(Record) ->
    #game_category_created{data = Data} = Record,
    ?assert(Data =/= undefined),
    #{
        <<"kind">> => igor_json:pack(game_category_created, {custom, fun notification_protocol:notification_kind_to_json/1}),
        <<"data">> => igor_json:pack(Data, {custom, fun web_protocol:game_category_excerpt_to_json/1})
    }.

-spec game_category_created_from_json(igor_json:json_object()) -> game_category_created().

game_category_created_from_json(Json) ->
    Data = igor_json:parse(Json, <<"data">>, {custom, fun web_protocol:game_category_excerpt_from_json/1}),
    #game_category_created{data = Data}.

-spec game_category_updated_to_json(game_category_updated()) -> igor_json:json_object().

game_category_updated_to_json(Record) ->
    #game_category_updated{data = Data} = Record,
    ?assert(Data =/= undefined),
    #{
        <<"kind">> => igor_json:pack(game_category_updated, {custom, fun notification_protocol:notification_kind_to_json/1}),
        <<"data">> => igor_json:pack(Data, {custom, fun web_protocol:game_category_excerpt_to_json/1})
    }.

-spec game_category_updated_from_json(igor_json:json_object()) -> game_category_updated().

game_category_updated_from_json(Json) ->
    Data = igor_json:parse(Json, <<"data">>, {custom, fun web_protocol:game_category_excerpt_from_json/1}),
    #game_category_updated{data = Data}.

-spec game_category_deleted_to_json(game_category_deleted()) -> igor_json:json_object().

game_category_deleted_to_json(Record) ->
    #game_category_deleted{data = Data} = Record,
    ?assert(Data =/= undefined),
    #{
        <<"kind">> => igor_json:pack(game_category_deleted, {custom, fun notification_protocol:notification_kind_to_json/1}),
        <<"data">> => igor_json:pack(Data, {custom, fun web_protocol:game_category_excerpt_to_json/1})
    }.

-spec game_category_deleted_from_json(igor_json:json_object()) -> game_category_deleted().

game_category_deleted_from_json(Json) ->
    Data = igor_json:parse(Json, <<"data">>, {custom, fun web_protocol:game_category_excerpt_from_json/1}),
    #game_category_deleted{data = Data}.

-spec game_item_updated_to_json(game_item_updated()) -> igor_json:json_object().

game_item_updated_to_json(Record) ->
    #game_item_updated{data = Data} = Record,
    ?assert(Data =/= undefined),
    #{
        <<"kind">> => igor_json:pack(game_item_updated, {custom, fun notification_protocol:notification_kind_to_json/1}),
        <<"data">> => igor_json:pack(Data, {custom, fun web_protocol:game_item_to_json/1})
    }.

-spec game_item_updated_from_json(igor_json:json_object()) -> game_item_updated().

game_item_updated_from_json(Json) ->
    Data = igor_json:parse(Json, <<"data">>, {custom, fun web_protocol:game_item_from_json/1}),
    #game_item_updated{data = Data}.

