%% @author Igor compiler
%% @doc Compiler version: igorc 2.1.3
%% DO NOT EDIT THIS FILE - it is machine generated

-module(web_rest_game_builds).

-include_lib("igor/include/igor_http.hrl").

-behaviour(cowboy_handler).

-export([
    init/2,
    get_game_builds_for_branch_403/1
]).

init(Req0, Opts) ->
    Method = cowboy_req:method(Req0),
    Req = handle_method(Method, Req0),
    {ok, Req, Opts}.

handle_method(<<"GET">>, Req) ->
    handle_get(Req);
handle_method(_, Req) ->
    ResponseHeaders = #{<<"Allow">> => <<"GET">>},
    cowboy_req:reply(405, ResponseHeaders, Req).

get_game_builds_for_branch_403(ResponseContent403) ->
    throw(#{status_code => 403, response => ResponseContent403}).

handle_get(Req) ->
    try
        Guid = cowboy_req:binding(guid, Req),
        Branch = cowboy_req:binding(branch, Req),
        Qs = cowboy_req:parse_qs(Req),
        Offset = igor_http:parse_query(<<"offset">>, Qs, int),
        Limit = igor_http:parse_query(<<"limit">>, Qs, int),
        {ResponseContent, Req1} = web_rest_callback_game:get_game_builds_for_branch(Guid, Branch, Offset, Limit, Req),
        Body = jsx:encode(web_protocol:collection_slice_to_json(ResponseContent, {custom, fun web_protocol:build_to_json/1})),
        ResponseHeaders = #{<<"Content-Type">> => <<"application/json; charset=utf-8">>},
        cowboy_req:reply(200, ResponseHeaders, Body, Req1)
    catch
        #{status_code := 403, response := ResponseContent403} ->
            ResponseContent403Body = jsx:encode(web_protocol:forbidden_error_to_json(ResponseContent403)),
            ResponseHeaders403 = #{<<"Content-Type">> => <<"application/json; charset=utf-8">>},
            cowboy_req:reply(403, ResponseHeaders403, ResponseContent403Body, Req);
        #bad_request{} ->
            cowboy_req:reply(400, Req)
    end.

